<?php
// This will store a password as well as salt 
// to prevent the attack done by the users.
// to prevent a further attack done by a malicious user,
// salt is also be created for every user.
header("Content-Type: text/html;charset=UTF-8");
error_reporting(E_ALL ^ E_WARNING ^ E_NOTICE);

include "/var/www/html/.secret/.config.php";

require_once("/var/www/html/plugin/strip_malicious_character.php");
// TODO: Enable random pepper generation when 
// a server is created.

// TODO: Session needs to be generated by SHA2
session_name('employee_password_man');
session_start();

// For preventing session hijacking.
if ($_SERVER['REMOTE_ADDR'] != $_SESSION['ipaddress'])
{
  session_unset();
  session_destroy();
}

if ($_SERVER['HTTP_USER_AGENT'] != $_SESSION['useragent'])
{
  session_unset();
  session_destroy();
}

try {

  $conn = new PDO("mysql:host=$host;dbname=$db;charset=utf8mb4", $user, $pass);
  
  // Toggle an error mode to exception
  $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

  //*********************************** */
  //** Insert user info *************** */
  //*********************************** */
  $insert_account_info_prepare=
  $conn->prepare("INSERT INTO `user` (`first_name`,
  `middle_name`,
  `last_name`,
  `address` ,
  `phone_number` , 
  `email`)
  VALUES
  (:first_name, :middle_name, :last_name, :_address, :phone_number, :email);");

  // Input values from user's data.
  $insert_account_info_prepare->bindValue(':first_name', 
  htmlspecialchars($_SESSION['user_info']['employeeFirstName']) , 
  PDO::PARAM_STR);
  
  $insert_account_info_prepare->bindValue(':middle_name', 
  htmlspecialchars($_SESSION['user_info']['employeeMiddleName']) ,
  PDO::PARAM_STR);
  
  $insert_account_info_prepare->bindValue(':last_name', 
  htmlspecialchars($_SESSION['user_info']['employeeLastName']) ,
  PDO::PARAM_STR);

  $insert_account_info_prepare->bindValue(':_address', 
  htmlspecialchars($_SESSION['user_info']['employeeAddress']) ,
  PDO::PARAM_STR);
  
  $insert_account_info_prepare->bindValue(':phone_number', 
  htmlspecialchars($_SESSION['user_info']['employeePhoneNumber']), 
  PDO::PARAM_STR);
   
  $insert_account_info_prepare->bindValue(':email', 
  htmlspecialchars($_SESSION['user_info']['employeeEmail']),
  PDO::PARAM_STR);

  $insert_account_info_prepare->execute();
  $insert_account_info_prepare=NULL;
  //*********************************** */
  //*********************************** */
  


  //*********************************** */
  //*********************************** */
  // Fetch user_id AFTER insert an user's info. */
  //*********************************** */
  $last_id_prepare=$conn->prepare("SELECT  LAST_INSERT_ID();");
  $last_id_prepare->execute();
  $result = $last_id_prepare->fetch(PDO::FETCH_ASSOC);
  $user_id_after_insert=$result['LAST_INSERT_ID()'];

  $last_id_prepare=NULL;
  //*********************************** */
  //*********************************** */



  //*********************************** */
  // Insert user's password as well as a random salt. */
  //*********************************** */
  $insert_pass_prepare=$conn->prepare("INSERT INTO `user_secret` (
    `user_id`,
    `salt`,
    `email_verification_token`,
    `verified`,
    `password`)
  VALUES
  (:user_id, :salt, :email_verification_token, 1, :_password);");

  $salt=bin2hex(openssl_random_pseudo_bytes(16));
  $email_verification_token=bin2hex(openssl_random_pseudo_bytes(64));

  $insert_pass_prepare->bindValue(':user_id', 
  $user_id_after_insert, 
  PDO::PARAM_INT);
  
  $insert_pass_prepare->bindValue(':salt', 
  $salt,
  PDO::PARAM_STR);

  $insert_pass_prepare->bindValue(':email_verification_token', 
  $email_verification_token,
  PDO::PARAM_STR);

  $insert_pass_prepare->bindValue(':_password', 
  hash('sha256',$salt.$_SESSION['user_info']['employeePassword'].$pepper),
  PDO::PARAM_STR);

  $insert_pass_prepare->execute();
  $insert_pass_prepare=NULL;
  //*********************************** */
  //*********************************** */

  $_SESSION['user_info']['employeeEmailToken']=$email_verification_token;

} catch(PDOException $e) {
  
  http_response_code(500);
  echo "Unkonwn error";

  // Disconnect all objects from mysql.
  $insert_account_info_prepare=NULL;
  $last_id_prepare=NULL;
  $insert_pass_prepare=NULL;
}


?>