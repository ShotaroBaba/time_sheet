<?php

// Unset already started session to create a value.

header("Content-Type: text/html;charset=UTF-8");
// TODO: Session needs to be generated by SHA3

// // *************************************/
// // **** Check login status *************/
// try {

//   $conn = new PDO("mysql:host=$host;dbname=$db;charset=utf8mb4", $user, $pass);
  
//   // Toggle an error mode to exception
//   $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

//   // Check a number of email before inserting a
//   // user's info.

//   $check_email_address_prepare=
//   $conn->prepare("SELECT COUNT(`email`) as email_count
//   FROM `user` WHERE
//   `email` = :_email;")

//   $check_email_address_prepare->bindValue(":_email", htmlspecialchars($_POST['employeeEmail']), PDO::PARAM_STR))
  
//   $check_email_address_result=$check_email_address_prepare->execute();
//   $check_email_address_result=$check_email_address_result->fetch(PDO::FETCH_ASSOC);
//   $check_email_address_prepare=NULL;

//   // Email already exists.
//   if($check_email_address_result['email_count'] > 0){
//     echo "Error. Registered email already exists.";
//     header("Location: employee_account_registration.php")
//     die;
//   }
// }

// catch(PDOException $e)  {
//   echo "Unknown error."
//   die; 
// }

session_name('employee_password_man');
session_start([
  'cookie_lifetime' =>600,
]);
session_regenerate_id(true);

// print_r($_COOKIE);
# Insert ip & user agent to see if 
# a user is the same user he / she access to this website 
# with a specified cookie (Strict security measure).
$_SESSION['ipaddress']=$_SERVER['REMOTE_ADDR'];
$_SESSION['useragent']=$_SERVER['HTTP_USER_AGENT'];

require_once("/var/www/html/plugin/strip_malicious_character.php");

$password_format="/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d]{8,}$/";
$illegal_password_format="/[^A-Za-z0-9]+/";

// Check password format before input as it may 
// be altered by malicious attempts of javascript code modifications.
if( !preg_match($password_format,$_POST["employeePassword"]) || 
    preg_match($illegal_password_format,$_POST["employeePassword"])){
      echo "Unknown error.";
      http_response_code(500);
      exit(1);
    }


// Set user's session info that is already input by a user.
$_SESSION["user_info"]=$_POST;

?>


<!-- TODO: Enable strict session id check. -->
<!-- Load css files. -->

<link href='/css/bootstrap.min.css' rel='stylesheet'>
<link href='/css/index.css' rel='stylesheet'>


<div class="container align-items-center" id="formReview">
  <h1 style="text-align: center">Account Registration Review</h1>
  <div class="Review-window">
    First  Name <br>
    <?php echo htmlspecialchars($_POST["employeeFirstName"]) ?><br><br>
    Middle Name <br>
    <?php echo htmlspecialchars($_POST["employeeMiddleName"]) ?><br><br>
    Last Name<br>
     <?php echo htmlspecialchars($_POST["employeeLastName"]) ?><br><br>
    Address<br>
     <?php echo htmlspecialchars($_POST["employeeAddress"]) ?><br><br>
    Phone Number<br>
     <?php echo htmlspecialchars($_POST["employeePhoneNumber"]) ?><br><br>
    Email<br>
    <?php echo htmlspecialchars($_POST["employeeEmail"]) ?><br><br>
    Password: ****
  </div>
  <div>
  <div  class="d-flex justify-content-center">
    <div class="col-auto mx-3">
      <!-- Proceed to the output. -->
      <button class="btn btn-primary" onclick="window.location='/employee/employee_account_confirmation_processing.php'">
        Confirm 
      </button>
    </div>    
    <div class="col-auto mx-3">
    <!-- Go back to the previous page. -->
      <button class="btn btn-primary" onclick="window.location='/employee/employee_account_registration.php'">
      Back 
      </button>
    </div>
  </div>
</div>
